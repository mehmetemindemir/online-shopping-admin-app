import * as actions from './actionTypes'import axios from '../../axios-instance'export const brandStart = () => {    return {        type: actions.BRAND_START    }}export const brandSuccess = (_brandData) => {    return {        type: actions.BRAND_SUCCESS,        brandData: _brandData    }}export const brandFail = (_error) => {    return {        type: actions.AUTH_FAIL,        error: _error    }}export const brandPriceListSuccess = (_priceListUrl) => {    return {        type: actions.BRAND_PRICE_LIST_SUCCESS,        priceListUrl: _priceListUrl    }};export const brandPriceListFail = (_error) => {    return {        type: actions.BRAND_PRICE_LIST_FAIL,        error: _error    }}export const brandLogoSuccess = (_logoUrl) => {    return {        type: actions.BRAND_LOGO_SUCCESS,        logoUrl: _logoUrl    }}export const brandLogoFail = (_error) => {    return {        type: actions.BRAND_LOGO_FAIL,        error: _error    }}export const brandLogoProgress = (_loaded, _total) => {    return {        type: actions.BRAND_LOGO_PROGRESS,        logoLoaded: _loaded,        logoTotal: _total    }}export const brandPriceListProgress = (_loaded, _total) => {    return {        type: actions.BRAND_PRICE_LIST_PROGRESS,        priceListLoaded: _loaded,        priceListTotal: _total    }}export const addBrandLogo = (data) => {    return dispatch => {        axios.post('admin/photo/insert', data, {            onUploadProgress: progressEvent => {                dispatch(brandLogoProgress(progressEvent.loaded, progressEvent.total));            }        })            .then(res => {                if (res.data.statusCode === 'OK') {                    dispatch(brandLogoSuccess(res.data.data.photoUrl));                } else {                    dispatch(brandLogoFail(res.data.data.statusMessage));                }            })            .then(error => {                dispatch(brandLogoFail(error));            })    }}export const addBrandPrice = (data) => {    return dispatch => {        axios.post("admin/photo/insert", data, {            onUploadProgress: progressEvent => {                dispatch(brandPriceListProgress(progressEvent.loaded, progressEvent.total));            }        })            .then(res => {                if (res.data.statusCode === "OK") {                    console.log("res.data.data.addBrandPrice ", res.data.data.photoUrl)                    dispatch(brandPriceListSuccess(res.data.data.photoUrl))                } else {                    dispatch(brandPriceListFail(res.data.data.statusMessage));                }            })            .catch(error => {                dispatch(brandPriceListFail(error));            })    }}export const getBrand = () => {    return dispatch => {        dispatch(brandStart());        const data = {            companyId: 1        }        axios.post('public/brandList', data)            .then(res => {                if (res.data.statusCode === 'OK') {                    dispatch(brandSuccess(res.data.data.reverse()));                } else {                    dispatch(brandFail(res.data.statusMessage));                }            })            .catch(error => {                dispatch(brandFail(error));            })    }}export const delBrand = (id, status) => {    console.log("brand id:", id);    const reqData = {        companyId: 1    };    const deldata = {        brandId: id,        status: status    };    return dispatch => {        dispatch(brandStart());        axios.post('admin/changeBrandStatus', deldata)            .then(res => {                if (res.data.statusCode === 'OK') {                    axios.post('public/brandList', reqData)                        .then(res1 => {                            if (res1.data.statusCode === 'OK') {                                dispatch(brandSuccess(res1.data.data.reverse()));                            } else {                                dispatch(brandFail(res1.data.statusMessage));                            }                        })                        .catch(error => {                            dispatch(brandFail(error));                        })                } else {                    dispatch(brandFail(res.data.statusMessage));                }            })            .catch(error => {                dispatch(brandFail(error))            })    }}export const addPriceList = (data) => {    return dispatch => {    }}export const addBrand = (data) => {    return dispatch => {        dispatch(brandStart());        const reqData = {            companyId: data.companyId        }        axios.post('admin/addBrand', data)            .then(res => {                if (res.data.statusCode === 'OK') {                    axios.post('public/brandList', reqData)                        .then(res1 => {                            if (res1.data.statusCode === 'OK') {                                dispatch(brandSuccess(res1.data.data.reverse()));                            } else {                                dispatch(brandFail(res1.data.statusMessage));                            }                        })                        .catch(error => {                            dispatch(brandFail(error));                        })                } else {                    dispatch(brandFail(res.data.statusMessage))                }            })            .catch(error => {                dispatch(brandFail(error));            });    }}