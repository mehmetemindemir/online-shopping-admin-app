import React from "react";import {Box, Button, TextField} from "@material-ui/core";import {Formik} from "formik";import * as Yup from "yup";import Container from "@material-ui/core/Container";import TextareaAutosize from "@material-ui/core/TextareaAutosize";import classes from './NewProductFrom.module.css'const NewProductFrom = (props) => {    return (        <Box display="flex"             flexDirection="column"             height="100%"             justifyContent="center">            <Container maxWidth="lg">                <Formik                    initialValues={{                        name: '',                        comment: '',                        categoryId: 0,                        subCategoryId: 0,                        price: 0.0,                        currency: "TL",                        tax: 0.0,                        discount: 0.0,                        stock: 0.0,                        stockType: "",                        branId: 0                    }}                    validationSchema={                        Yup.object().shape({                            categoryId: Yup.string().required('Category  is required'),                            subCategoryId: Yup.string().required('Category  is required'),                            name: Yup.string().max(255).required('Product Name is required'),                        })                    }                    onSubmit={(values, isSubmitting) => {                        try {                            const data = {                                name: values.name.toUpperCase(),                                comment: values.comment.toUpperCase(),                                categoryId: values.categoryId,                                subCategoryId: values.subCategoryId,                                lang: "TR"                            };                            //props.addBrand(data);                            console.log('decs: ', data);                        } catch (e) {                            console.log('error : ', e)                            //props.errorModalHandler(e);                        }                    }}                >                    {({                          errors,                          handleBlur,                          handleChange,                          handleSubmit,                          isSubmitting,                          touched,                          values                      }) => (                        <form onSubmit={handleSubmit}>                            <Box mt={2}>                                <TextField                                    error={Boolean(touched.name && errors.name)}                                    fullWidth                                    helperText={touched.name && errors.name}                                    label="Product name"                                    margin="normal"                                    name="productTitle"                                    onBlur={handleBlur}                                    onChange={handleChange}                                    value={values.productTitle}                                    variant="outlined"                                />                            </Box>                            <Box mt={2}>                                <TextareaAutosize                                    rowsMin={10}                                    cols={60}                                    className={classes.input}                                    margin="normal"                                    name="productDec"                                    placeholder="Product name"                                    onBlur={handleBlur}                                    onChange={handleChange}                                    value={values.productDec}                                />                            </Box>                            <Box mt={2}>                                <TextField                                    fullWidth                                    label="Select Category"                                    name="categoryId"                                    onChange={handleChange}                                    required                                    select                                    SelectProps={{native: true}}                                    value={values.categoryId}                                    variant="outlined"                                >                                    <option                                        key={0}                                        value=""                                    >                                    </option>                                    {props.menuList.map((option) => (                                        <option                                            key={option.id}                                            value={option.id}                                        >                                            {option.categoryName}                                        </option>                                    ))}                                </TextField>                            </Box>                            <Box mt={2}>                                <TextField                                    fullWidth                                    label="Select Category"                                    name="subCategoryId"                                    onChange={handleChange}                                    required                                    select                                    SelectProps={{native: true}}                                    value={values.subCategoryId}                                    variant="outlined"                                >                                    <option                                        key={0}                                        value=""                                    >                                    </option>                                    {props.menuList.map((option) => (                                        <option                                            key={option.id}                                            value={option.id}                                        >                                            {option.categoryName}                                        </option>                                    ))}                                </TextField>                            </Box>                            <Box mt={2}>                                <div className={classes.leftBox}>                                    <TextField                                        error={Boolean(touched.price && errors.price)}                                        helperText={touched.price && errors.price}                                        label="Price"                                        margin="normal"                                        name="price"                                        type="number"                                        onBlur={handleBlur}                                        onChange={handleChange}                                        value={values.price}                                        variant="outlined"                                    />                                    <TextField                                        error={Boolean(touched.currency && errors.currency)}                                        helperText={touched.currency && errors.currency}                                        label="Currency"                                        margin="normal"                                        name="currency"                                        onBlur={handleBlur}                                        onChange={handleChange}                                        value={values.currency}                                        variant="outlined"                                    />                                </div>                            </Box>                            <Box mt={2}>                                <div className={classes.leftBox}>                                    <TextField                                        error={Boolean(touched.tax && errors.tax)}                                        type="number"                                        helperText={touched.tax && errors.tax}                                        label="Tax"                                        margin="normal"                                        name="tax"                                        onBlur={handleBlur}                                        onChange={handleChange}                                        value={values.tax}                                        variant="outlined"                                    />                                    <TextField                                        error={Boolean(touched.discount && errors.discount)}                                        helperText={touched.discount && errors.discount}                                        label="Discount"                                        margin="normal"                                        name="discount"                                        type="number"                                        onBlur={handleBlur}                                        onChange={handleChange}                                        value={values.discount}                                        variant="outlined"                                    />                                </div>                            </Box>                            <Box mt={2}>                                <TextField                                    fullWidth                                    label="Select Stock Type"                                    name="stockType"                                    onChange={handleChange}                                    required                                    select                                    SelectProps={{native: true}}                                    value={values.subCategoryId}                                    variant="outlined"                                >                                    <option                                        key={0}                                        value="1"                                    >                                        Sayisal                                    </option>                                </TextField>                            </Box>                            <Box mt={2}>                                <div className={classes.leftBox}>                                    <TextField                                        error={Boolean(touched.stock && errors.stock)}                                        helperText={touched.stock && errors.stock}                                        label="Stock"                                        margin="normal"                                        name="stock"                                        onBlur={handleBlur}                                        onChange={handleChange}                                        value={values.currency}                                        variant="outlined"                                    />                                </div>                            </Box>                            <Box mt={2}>                                <label htmlFor="upload-photo">                                    <input                                        style={{display: 'none'}}                                        id="upload-photo"                                        name="upload-photo"                                        type="file"                                    />                                    <Button color="secondary" variant="contained" component="span">                                        Upload button                                    </Button>                                </label>                            </Box>                            <Box mt={10}>                                <Button                                    color="primary"                                    disabled={isSubmitting}                                    fullWidth                                    size="large"                                    type="submit"                                    variant="contained"                                >                                    New Product                                </Button>                            </Box>                        </form>                    )}                </Formik>            </Container>        </Box>    )}export default NewProductFrom;